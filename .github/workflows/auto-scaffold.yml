name: Auto Scaffold Module

on:
  issues:
    types: [opened]   # 新 issue 才觸發（需要可加 edited/reopened）

permissions:
  contents: write     # 需要能 commit 回 repo
  issues: read

jobs:
  scaffold:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare module from Issue
        id: prep
        shell: bash
        run: |
          set -euo pipefail

          TITLE="${{ github.event.issue.title }}"
          BODY="${{ github.event.issue.body }}"
          NUMBER="${{ github.event.issue.number }}"
          ACTOR="${{ github.actor }}"
          CREATED="${{ github.event.issue.created_at }}"

          # 產生乾淨的 slug（英文小寫、- 分隔）
          SLUG="$(echo "$TITLE" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9]+/-/g;s/^-+|-+$//g')"

          DIR="modules/$SLUG"
          FILE="$DIR/module.json"

          mkdir -p "$DIR"

          # JSON-escape BODY
          BODY_JSON=$(printf '%s' "$BODY" | jq -R -s '.')

          cat > "$FILE" <<EOF
          {
            "name": "$TITLE",
            "slug": "$SLUG",
            "source": "issue",
            "issue_number": $NUMBER,
            "createdBy": "$ACTOR",
            "createdAt": "$CREATED",
            "labels": [$(jq -r '[.[]?.name] | map("\""+.+"\"") | join(",")' <<< '${{ toJson(github.event.issue.labels) }}')],
            "body": $BODY_JSON
          }
          EOF

          echo "dir=$DIR" >> "$GITHUB_OUTPUT"
          echo "slug=$SLUG" >> "$GITHUB_OUTPUT"
          echo "file=$FILE" >> "$GITHUB_OUTPUT"

      - name: Commit & push
        shell: bash
        run: |
          set -e
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add modules/
          git commit -m "scaffold: ${{ steps.prep.outputs.slug }} from issue #${{ github.event.issue.number }}" || echo "No changes to commit"
          git push

      - name: Comment back with link
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.issue.title;
            const slug = title.toLowerCase().replace(/[^a-z0-9]+/g,'-').replace(/^-+|-+$/g,'');
            const branch = context.payload.repository.default_branch || 'main';
            const url = `https://github.com/${context.repo.owner}/${context.repo.repo}/tree/${branch}/modules/${slug}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: `✅ 模組已自動建立：\n\n- 資料夾：\`modules/${slug}\`\n- 連結：${url}`
            });
