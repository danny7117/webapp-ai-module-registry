name: Scaffold Module from Issue

on:
  issues:
    types: [opened, labeled, edited]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  scaffold:
    # 為了避免「看不到 run」的狀況，這裡先不擋；改在步驟內判斷
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Ensure registry.json
        run: |
          mkdir -p modules
          if [ ! -f modules/registry.json ]; then
            echo '{ "modules": [] }' > modules/registry.json
          fi

      # 🔎 直接把這次 Issue 的 labels 印出來，方便你確認到底是什麼字串
      - name: Debug labels
        run: |
          echo 'Labels JSON:'
          echo '${{ toJson(github.event.issue.labels) }}'

      # 沒貼正確標籤就直接跳過（不當失敗）
      - name: Guard - require module:proposal label
        if: ${{ !contains(join(github.event.issue.labels.*.name, ' '), 'module:proposal') }}
        run: |
          echo "This issue is not labeled 'module:proposal'. Nothing to do."
          exit 0

      - name: Generate module scaffold
        shell: bash
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          node ./scripts/scaffold_module.cjs

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: scaffold module from issue #${{ github.event.issue.number }}"
          branch: "scaffold/${{ github.run_id }}"
          title: "Scaffold module from issue #${{ github.event.issue.number }}"
          body: "Auto-generated from issue #${{ github.event.issue.number }}"
          labels: "automerge"

      # ✅ 官方 REST API 自動合併（不依賴第三方 action）
      - name: Auto-merge PR (REST API)
        if: steps.cpr.outputs.pull-request-number
        env:
          GH_TOKEN: ${{_
