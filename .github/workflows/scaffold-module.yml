name: Scaffold Module from Issue

on:
  issues:
    types: [opened, labeled, edited]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  scaffold:
    if: contains(github.event.issue.labels.*.name, 'module:proposal')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Ensure registry.json
        run: |
          mkdir -p modules
          if [ ! -f modules/registry.json ]; then
            echo '{ "modules": [] }' > modules/registry.json
          fi

      - name: Show files (debug)
        run: |
          pwd
          ls -la
          echo "---- scripts ----"
          ls -la scripts || true

      - name: Generate module scaffold
        shell: bash
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          node ./scripts/scaffold_module.cjs

      # 建 PR（使用 peter-evans/create-pull-request）
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore: scaffold module from issue #${{ github.event.issue.number }}"
          branch: "scaffold/${{ github.run_id }}"
          title: "Scaffold module from issue #${{ github.event.issue.number }}"
          body: "Auto-generated from issue #${{ github.event.issue.number }}"
          labels: "automerge"

      # 立刻自動合併剛建立的 PR
      - name: Auto-merge PR
        if: steps.cpr.outputs.pull-request-number
        uses: peter-evans/merge-pull-request@v3
        with:
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
          commit-message: "auto merge from module proposal #${{ github.event.issue.number }}"

      # 留言回 Issue 告知 PR 已合併
      - name: Comment PR link on issue
        if: steps.cpr.outputs.pull-request-number
        uses: actions/github-script@v7
        with:
          script: |
            const pr = ${{ steps.cpr.outputs['pull-request-number'] }};
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `已自動建立並合併 PR #${pr}；模組已寫入主分支 ✅`
            });
