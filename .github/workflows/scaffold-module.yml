name: Scaffold Module from Issue

on:
  issues:
    types: [opened, labeled, edited]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  scaffold:
    # 只在 Issue 具有「module:proposal」標籤時才跑
    if: contains(github.event.issue.labels.*.name, 'module:proposal')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug incoming labels
        run: |
          echo "[debug] labels from event:"
          (jq -r '.issue.labels[].name' "$GITHUB_EVENT_PATH" || true) | nl -ba

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Ensure registry.json & scripts dir
        run: |
          mkdir -p modules
          if [ ! -f modules/registry.json ]; then
            echo '{ "modules": [] }' > modules/registry.json
          fi
          mkdir -p scripts

      - name: Generate module files (tolerant)
        run: |
          set +e
          if [ -f scripts/scaffold_module.cjs ]; then
            echo "[run] node scripts/scaffold_module.cjs"
            node scripts/scaffold_module.cjs || echo "[warn] scaffold_module.cjs returned non-zero, continue..."
          elif [ -f scripts/scaffold_module.js ]; then
            echo "[run] node scripts/scaffold_module.js"
            node scripts/scaffold_module.js || echo "[warn] scaffold_module.js returned non-zero, continue..."
          else
            echo "[info] No scaffold script found under scripts/. Skipping generation."
          fi
          echo "[debug] changed files:"
          git status --porcelain

      - name: Create branch & commit
        id: cpr
        shell: bash
        run: |
          set -e
          if [ "$(git status --porcelain | wc -l)" -eq 0 ]; then
            echo "nothing_to_commit=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          ISSUE_NO=${{ github.event.issue.number }}
          BR="issue-${ISSUE_NO}-scaffold"

          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          git checkout -b "$BR"
          git add -A
          git commit -m "chore: scaffold module from issue #${ISSUE_NO}"
          git push -u origin "$BR"

          echo "branch=$BR" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.cpr.outputs.nothing_to_commit != 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_NO=${{ github.event.issue.number }}
          TITLE="[Module] scaffold from issue #${ISSUE_NO}"
          BODY="Auto-generated from issue #${ISSUE_NO}"
          gh pr create --title "$TITLE" --body "$BODY" --base "main" --head "${{ steps.cpr.outputs.branch }}"

      - name: Enable auto-merge (squash)
        if: steps.cpr.outputs.nothing_to_commit != 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr merge --auto --squash "${{ steps.cpr.outputs.branch }}" || true
