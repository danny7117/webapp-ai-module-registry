name: Scaffold Module from Issue

on:
  issues:
    types: [opened, labeled, edited]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

# 同一張 issue 只跑一個 workflow，避免重複
concurrency: module-scaffold-${{ github.event.issue.number || github.event.inputs.issue_number }}

jobs:
  scaffold:
    # ✅ 同時支援「新開就帶標籤」「後加標籤」「編輯後仍含標籤」
    if: >
      (github.event_name == 'issues' && github.event.action == 'opened' &&
       contains(toJson(github.event.issue.labels.*.name), 'module:proposal')) ||
      (github.event_name == 'issues' && github.event.action == 'labeled' &&
       github.event.label.name == 'module:proposal') ||
      (github.event_name == 'issues' && github.event.action == 'edited' &&
       contains(toJson(github.event.issue.labels.*.name), 'module:proposal')) ||
      (github.event_name == 'workflow_dispatch')

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # 方便在 Actions > Logs 看到到底收到了什麼事件/標籤
      - name: Debug incoming labels
        run: |
          echo "event=${{ github.event_name }} action=${{ github.event.action }}"
          echo "labels=$(echo '${{ toJson(github.event.issue.labels.*.name) }}')"
          echo "label_from_payload=${{ github.event.label.name }}"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 確保 registry.json 存在
      - name: Ensure modules/registry.json exists
        run: |
          mkdir -p modules
          if [ ! -f modules/registry.json ]; then
            echo '{ "modules": [] }' > modules/registry.json
          fi
          cat modules/registry.json

      # 若你的 scaffold 需要套件，就會安裝；沒有 package.json 會自動跳過
      - name: Install deps (if needed)
        run: |
          if [ -f package.json ]; then
            npm ci
          fi

      # 產生模組：優先跑 .cjs；沒有的話試 .js；兩者都沒有就略過
      - name: Generate module files
        run: |
          if [ -f scripts/scaffold_module.cjs ]; then
            node scripts/scaffold_module.cjs
          elif [ -f scripts/scaffold_module.js ]; then
            node scripts/scaffold_module.js
          else
            echo "No scaffold script found under scripts/. Skipping generation."
          fi

      # 建分支、commit、push（只有真的有變更才 push）
      - name: Create branch & commit
        id: branch
        run: |
          ISSUE_NO="${{ github.event.issue.number || github.event.inputs.issue_number || 'manual' }}"
          BRANCH="mod/${ISSUE_NO}"
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git checkout -b "$BRANCH"
          if git status --porcelain | grep .; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            git add -A
            git commit -m "chore: scaffold module from issue #${ISSUE_NO}"
            git push --set-upstream
